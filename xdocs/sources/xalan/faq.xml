<?xml version="1.0" standalone="no"?> 
<!DOCTYPE faqs SYSTEM "sbk:/style/dtd/faqs.dtd">

<faqs title="Frequently asked questions">

  <faq title="Where do I go to learn about XSLT">  
    <q>Where do I go to learn about XSLT?</q>
    
    <a><p>The definitive sources are the W3C XSLT and XPath recommendations: <resource-ref idref="XSLT"/> and 
    <resource-ref idref="XPath"/>.</p>
    <p>For general questions not specific to &xslt4c;, see Dave Pawson's <jump
    href="http://freespace.virgin.net/b.pawson/xsl/index.html#top">XSL Frequently Asked Questions</jump>.</p>
    <p>For a brief listing of tutorials, discussion forums, and other materials, see <link idref="overview"
     anchor="uptospeed">Getting up to speed with XSLT</link>.</p></a>
  </faq>

  <faq title="Which version of Xerces should I be using?">  
    <q>Which version of Xerces should I be using?</q>
    
    <a><p>The &xslt4c; release notes includes information about the Xerces-C release with which the &xslt4c; release has been coordinated and tested. See <link idref="readme" anchor="status">Status</link></p></a>
  </faq>
  
  <faq title="Are the XSLTEngineImpl (XSLT processor) and StylesheetRoot (compiled stylesheet) objects thread-safe?">
  
    <q>Are the XSLTEngineImpl (XSLT processor) and StylesheetRoot (compiled stylesheet) objects thread-safe?</q>
       
    <a>
    <p>The XSLTEngineImpl stores running state information, so it is not thread-safe. If you want to use the XSLTEngineImpl
    to perform multiple transformations, create a new instance for each transformations or synchronize the transformations. 
    If you want to perform multiple serial transformations with a single XSLTEngineImpl object, call the XSLTEngineImpl reset()
    method between each transformation.</p>
    <p>StylesheetRoot objects, on the other hand, are thread-safe. A single StylesheetRoot object may be called concurrently
    from multiple threads. Keep in mind, however, that the StylesheetRoot uses an XSLTEgineImpl to store running state information
    for each transformation, so you must call the XSLTEngineImpl reset() method between each transformation.</p>
    <p>For more detail, see <link idref="samples" anchor="compilestylesheet">CompileStylesheet</link>.</p></a>
  </faq>
   
  <faq title="What can I do to speed up transformations?">
  
    <q>What can I do to speed up transformations?</q>
    
    <a><p>To maximize performance, here are some suggestions for you to keep in mind as you set up your applications:</p><ul>
    <li>Use compiled stylesheets for multiple transformations.<br/><br/></li>     
    <li>Set up your stylesheets to function efficiently.<br/><br/></li>
       <ul>
         <li>Don't use "//" (descendant axes) patterns near the root of a large document.<br/><br/></li>
         <li>Use xsl:key elements and the key() function as an efficient way to retrieve node sets.<br/><br/></li>
         <li>Where possible, use pattern matching rather than xsl:if or xsl:when statements.<br/><br/></li>
         <li>xsl:for-each is fast because it does not require pattern matching.<br/><br/></li>
         <li>Keep in mind that xsl:sort prevents incremental processing.<br/><br/></li>
         <li>When you create variables, &lt;xsl:variable name="fooElem" select="foo"/&gt; is usually faster than
         &gt;xsl:variable name="fooElem"&gt;&lt;xsl:value-of-select="foo"/&gt;&lt;/xsl:variable&gt;.<br/><br/></li>
         <li>Be careful using the last() function.<br/><br/></li>
         <li>The use of index predicates within match patterns can be expensive.<br/><br/></li>
         <li>Decoding and encoding is expensive.<br/><br/></li>
         <li>The serializer must check each character for escaping; 30% to 60% or processing time is typically spent in
         the serializer.</li>
       </ul>
    </ul></a>
  </faq>

  	<faq title="Stylesheet validation">
		<q>How do I validate an XSL stylesheet?</q>
		<a>
      <p>An XSL stylesheet is an XML document, so it can have a DOCTYPE and be subject to validation, right? </p>
      <p>The XSLT Recommendation includes a <jump href="http://www.w3.org/TR/xslt#dtd">DTD Fragment 
      for XSL Stylesheets</jump> with some indications of what you need to do to create a complete DTD for a given
      stylesheet. Keep in mind that stylesheets can include literal result elements and produce output that is not valid
      XML.</p>
      <p>You can use the xsl:stylesheet doctype defined in xsl-html40s.dtd for stylesheets that generate HTML.</p>
		</a>
	</faq> 
</faqs>
